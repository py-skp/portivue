"""add user_id to asset_class/subclass/sector

Revision ID: 4aee782579c9
Revises: a454d6d846d9
Create Date: 2025-09-19 17:52:29.283299

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4aee782579c9'
down_revision: Union[str, Sequence[str], None] = 'a454d6d846d9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('assetclass')
    op.drop_table('appsetting')
    op.drop_table('assetsubclass')
    op.drop_index('ix_accountmovement_as_of_date', table_name='accountmovement')
    op.drop_index('ix_accountmovement_created_at', table_name='accountmovement')
    op.drop_index('ix_accountmovement_from_account_id', table_name='accountmovement')
    op.drop_index('ix_accountmovement_to_account_id', table_name='accountmovement')
    op.drop_index('ix_accountmovement_type', table_name='accountmovement')
    op.drop_table('accountmovement')
    op.add_column('sector', sa.Column('org_id', sa.Integer(), nullable=True))
    op.add_column('sector', sa.Column('owner_user_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_sector_org_id'), 'sector', ['org_id'], unique=False)
    op.create_index(op.f('ix_sector_owner_user_id'), 'sector', ['owner_user_id'], unique=False)
    op.create_foreign_key(None, 'sector', 'user', ['owner_user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'sector', type_='foreignkey')
    op.drop_index(op.f('ix_sector_owner_user_id'), table_name='sector')
    op.drop_index(op.f('ix_sector_org_id'), table_name='sector')
    op.drop_column('sector', 'owner_user_id')
    op.drop_column('sector', 'org_id')
    op.create_table('accountmovement',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('as_of_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('note', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('from_account_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('to_account_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('amount_input', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('delta_from', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('delta_to', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('from_currency', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('to_currency', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('fx_rate_used', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('fx_source', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['from_account_id'], ['account.id'], name='accountmovement_from_account_id_fkey'),
    sa.ForeignKeyConstraint(['to_account_id'], ['account.id'], name='accountmovement_to_account_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='accountmovement_pkey')
    )
    op.create_index('ix_accountmovement_type', 'accountmovement', ['type'], unique=False)
    op.create_index('ix_accountmovement_to_account_id', 'accountmovement', ['to_account_id'], unique=False)
    op.create_index('ix_accountmovement_from_account_id', 'accountmovement', ['from_account_id'], unique=False)
    op.create_index('ix_accountmovement_created_at', 'accountmovement', ['created_at'], unique=False)
    op.create_index('ix_accountmovement_as_of_date', 'accountmovement', ['as_of_date'], unique=False)
    op.create_table('assetsubclass',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='assetsubclass_pkey')
    )
    op.create_table('appsetting',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('base_currency_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['base_currency_code'], ['currency.code'], name='appsetting_base_currency_code_fkey'),
    sa.PrimaryKeyConstraint('id', name='appsetting_pkey')
    )
    op.create_table('assetclass',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='assetclass_pkey')
    )
    # ### end Alembic commands ###
